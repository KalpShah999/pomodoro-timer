{"ast":null,"code":"var _jsxFileName = \"/Users/kalp/Documents/VSCode/React/pomodoro-timer/src/Timer.js\",\n    _s = $RefreshSig$();\n\nimport './index.css';\nimport HomePage from './HomePage';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer() {\n  _s();\n\n  const [initialWorkMinutes, setInitialWorkMinutes] = useState(this.props.locatoin.state.timeForWork);\n  const [initialBreakMinutes, setInitialBreakMinutes] = useState(state[1]);\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(initialWorkMinutes);\n  const [displayMessage, setDisplayMessage] = useState(true);\n  useEffect(() => {\n    let interval = setInterval(() => {\n      clearInterval(interval);\n\n      if (seconds === 0) {\n        if (minutes !== 0) {\n          setSeconds(59);\n          setMinutes(minutes - 1);\n        } else {\n          let newMinutes = displayMessage ? initialBreakMinutes - 1 : initialWorkMinutes - 1;\n          let newSeconds = 59;\n          setMinutes(newMinutes);\n          setSeconds(newSeconds);\n          setDisplayMessage(!displayMessage);\n        }\n      } else {\n        setSeconds(seconds - 1);\n      }\n    }, 1000);\n  }, [seconds]);\n  const timerMinutes = minutes < 10 ? `0${minutes}` : minutes;\n  const timerSeconds = seconds < 10 ? `0${seconds}` : seconds;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pomodoro\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: [displayMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Work Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 26\n      }, this), !displayMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Break Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [timerMinutes, \":\", timerSeconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Timer, \"BOHS41g4ZQoAFsyFXWnXcVj2Kds=\");\n\n_c = Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/kalp/Documents/VSCode/React/pomodoro-timer/src/Timer.js"],"names":["HomePage","React","useState","useEffect","Timer","initialWorkMinutes","setInitialWorkMinutes","props","locatoin","state","timeForWork","initialBreakMinutes","setInitialBreakMinutes","seconds","setSeconds","minutes","setMinutes","displayMessage","setDisplayMessage","interval","setInterval","clearInterval","newMinutes","newSeconds","timerMinutes","timerSeconds"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CJ,QAAQ,CAAC,KAAKK,KAAL,CAAWC,QAAX,CAAoBC,KAApB,CAA0BC,WAA3B,CAA5D;AACA,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDV,QAAQ,CAACO,KAAK,CAAC,CAAD,CAAN,CAA9D;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAACG,kBAAD,CAAtC;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,IAAD,CAApD;AAGAC,EAAAA,SAAS,CAAE,MAAM;AACf,QAAIgB,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BC,MAAAA,aAAa,CAACF,QAAD,CAAb;;AACA,UAAIN,OAAO,KAAK,CAAhB,EAAmB;AACjB,YAAIE,OAAO,KAAK,CAAhB,EAAmB;AACjBD,UAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,UAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,SAHD,MAGO;AACL,cAAIO,UAAU,GAAGL,cAAc,GAAGN,mBAAmB,GAAG,CAAzB,GAA6BN,kBAAkB,GAAG,CAAjF;AACA,cAAIkB,UAAU,GAAG,EAAjB;AACAP,UAAAA,UAAU,CAACM,UAAD,CAAV;AACAR,UAAAA,UAAU,CAACS,UAAD,CAAV;AACAL,UAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACD;AACF,OAXD,MAWO;AACLH,QAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD;AACF,KAhByB,EAgBvB,IAhBuB,CAA1B;AAiBD,GAlBQ,EAkBN,CAACA,OAAD,CAlBM,CAAT;AAoBA,QAAMW,YAAY,GAAGT,OAAO,GAAG,EAAV,GAAgB,IAAGA,OAAQ,EAA3B,GAAgCA,OAArD;AACA,QAAMU,YAAY,GAAGZ,OAAO,GAAG,EAAV,GAAgB,IAAGA,OAAQ,EAA3B,GAAgCA,OAArD;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACL;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,iBACGI,cAAc,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADrB,EAEG,CAACA,cAAD,iBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFtB;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,eAKL;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,iBACGO,YADH,OACkBC,YADlB;AAAA;AAAA;AAAA;AAAA;AAAA,YALK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AASD;;GAxCuBrB,K;;KAAAA,K","sourcesContent":["import './index.css';\nimport HomePage from './HomePage';\nimport React from 'react';\nimport { useState, useEffect } from 'react'\n\nexport default function Timer() {\n  const [initialWorkMinutes, setInitialWorkMinutes] = useState(this.props.locatoin.state.timeForWork)\n  const [initialBreakMinutes, setInitialBreakMinutes] = useState(state[1])\n  const [seconds, setSeconds] = useState(0)\n  const [minutes, setMinutes] = useState(initialWorkMinutes)\n  const [displayMessage, setDisplayMessage] = useState(true);\n  \n\n  useEffect (() => {\n    let interval = setInterval(() => {\n      clearInterval(interval);\n      if (seconds === 0) {\n        if (minutes !== 0) {\n          setSeconds(59);\n          setMinutes(minutes - 1);\n        } else {\n          let newMinutes = displayMessage ? initialBreakMinutes - 1 : initialWorkMinutes - 1;\n          let newSeconds = 59;\n          setMinutes(newMinutes)\n          setSeconds(newSeconds);\n          setDisplayMessage(!displayMessage);\n        }\n      } else {\n        setSeconds(seconds - 1);\n      }\n    }, 1000)\n  }, [seconds])\n\n  const timerMinutes = minutes < 10 ? `0${minutes}` :  minutes;\n  const timerSeconds = seconds < 10 ? `0${seconds}` :  seconds;\n\n  return <div className=\"pomodoro\">\n    <div className=\"message\">\n      {displayMessage && <div>Work Time</div>}\n      {!displayMessage && <div>Break Time</div>}\n    </div>\n    <div className=\"timer\">\n      {timerMinutes}:{timerSeconds}\n    </div>\n  </div>\n}\n"]},"metadata":{},"sourceType":"module"}